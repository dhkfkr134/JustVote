[{"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\index.js":"1","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\reportWebVitals.js":"2","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\App.js":"3","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\store.js":"4","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\VotePage.js":"5","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Introduce.js":"6","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Login.js":"7","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\ranking\\Ranking.js":"8","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\Header.js":"9","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\SignUp.js":"10","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\mainHome\\MainHome.js":"11","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\rootReducer.js":"12","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\VoteContainer.js":"13","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Authentication.js":"14","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\AuthSignUp.js":"15","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\TopBar.js":"16","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\CreateVote.js":"17","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Subbar.js":"18","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\reducer.js":"19","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\actions.js":"20","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\reducer.js":"21","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\actions.js":"22","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\reducer.js":"23","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\actions.js":"24","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\reducer.js":"25","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\reducer.js":"26","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\index.js":"27","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\MyDropzone.js":"28","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\types.js":"29","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\types.js":"30","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\types.js":"31","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\types.js":"32","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\types.js":"33","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\SubbarItems.js":"34","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\actions.js":"35","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\actions.js":"36","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\MediaCard.js":"37","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\CommentCard.js":"38"},{"size":666,"mtime":1625148134000,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1621520334000,"results":"41","hashOfConfig":"40"},{"size":1205,"mtime":1628605403000,"results":"42","hashOfConfig":"40"},{"size":667,"mtime":1625578264000,"results":"43","hashOfConfig":"40"},{"size":11591,"mtime":1629214730814,"results":"44","hashOfConfig":"40"},{"size":178,"mtime":1623643904000,"results":"45","hashOfConfig":"40"},{"size":1485,"mtime":1628603531000,"results":"46","hashOfConfig":"40"},{"size":6354,"mtime":1623576176000,"results":"47","hashOfConfig":"40"},{"size":2073,"mtime":1628603368000,"results":"48","hashOfConfig":"40"},{"size":2499,"mtime":1629989401316,"results":"49","hashOfConfig":"40"},{"size":4279,"mtime":1628603668000,"results":"50","hashOfConfig":"40"},{"size":549,"mtime":1625837076000,"results":"51","hashOfConfig":"40"},{"size":1190,"mtime":1623595898000,"results":"52","hashOfConfig":"40"},{"size":5253,"mtime":1628603515000,"results":"53","hashOfConfig":"40"},{"size":13876,"mtime":1629991670303,"results":"54","hashOfConfig":"40"},{"size":2818,"mtime":1628603449000,"results":"55","hashOfConfig":"40"},{"size":6306,"mtime":1629985480360,"results":"56","hashOfConfig":"40"},{"size":1702,"mtime":1621949346000,"results":"57","hashOfConfig":"40"},{"size":1894,"mtime":1628604425000,"results":"58","hashOfConfig":"40"},{"size":2034,"mtime":1623593378000,"results":"59","hashOfConfig":"40"},{"size":1772,"mtime":1629989387671,"results":"60","hashOfConfig":"40"},{"size":2429,"mtime":1629989771662,"results":"61","hashOfConfig":"40"},{"size":1030,"mtime":1628605044000,"results":"62","hashOfConfig":"40"},{"size":792,"mtime":1628605032000,"results":"63","hashOfConfig":"40"},{"size":3307,"mtime":1628604961000,"results":"64","hashOfConfig":"40"},{"size":4366,"mtime":1627464016000,"results":"65","hashOfConfig":"40"},{"size":344,"mtime":1628605280000,"results":"66","hashOfConfig":"40"},{"size":2708,"mtime":1623577420000,"results":"67","hashOfConfig":"40"},{"size":423,"mtime":1622006014000,"results":"68","hashOfConfig":"40"},{"size":537,"mtime":1629986253525,"results":"69","hashOfConfig":"40"},{"size":147,"mtime":1628605052000,"results":"70","hashOfConfig":"40"},{"size":958,"mtime":1628604985000,"results":"71","hashOfConfig":"40"},{"size":1207,"mtime":1627463872000,"results":"72","hashOfConfig":"40"},{"size":605,"mtime":1626188902000,"results":"73","hashOfConfig":"40"},{"size":5356,"mtime":1628604525000,"results":"74","hashOfConfig":"40"},{"size":4416,"mtime":1628604791000,"results":"75","hashOfConfig":"40"},{"size":4951,"mtime":1629209158470,"results":"76","hashOfConfig":"40"},{"size":1560,"mtime":1629209146731,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"lgz6lw",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\index.js",[],["165","166"],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\reportWebVitals.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\App.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\store.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\VotePage.js",["167","168","169","170","171","172","173","174","175","176","177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getVotes,\r\n  getCommentRequest,\r\n  getVoted,\r\n  getFirst,\r\n  deleteComment,\r\n} from \"../redux\";\r\nimport testImage from \"../img/content_img.png\";\r\nimport CommentCard from \"./CommentCard\";\r\n\r\nimport image1 from \"../img/content/1cafe.PNG\";\r\nimport image2 from \"../img/content/2food.PNG\";\r\nimport image3 from \"../img/content/3notebook.PNG\";\r\nimport image4 from \"../img/content/4phone.PNG\";\r\nimport image5 from \"../img/content/5popsong.PNG\";\r\nimport image6 from \"../img/content/6stage.PNG\";\r\nimport image7 from \"../img/content/7dog.png\";\r\n\r\n// material import\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n///// css /////\r\n//댓글 및 버튼 css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    minWidth: 275,\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    bullet: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  },\r\n}));\r\n//프로그래스 바 css\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#1a90ff\",\r\n  },\r\n}))(LinearProgress);\r\n\r\n///// VotePage 전체 ////////////////////////////////////////////////////\r\n/* 기본 params - url요청 : getVoted, getVotes, getFirst, getCommentRequest\r\n              - store저장된 items : items, first, userId\r\n   useParams  - nam(voteID)\r\n   useState   - voted, comment, commented\r\n\r\n*/ /////////////////////////////////////////////////////////////////////\r\nfunction VotePage({\r\n  getVoted,\r\n  getVotes,\r\n  getFirst,\r\n  getCommentRequest,\r\n  deleteComment,\r\n  loading,\r\n  items,\r\n  first,\r\n  userId,\r\n}) {\r\n  useEffect(() => {\r\n    getFirst(nam, userId);\r\n    getVotes(nam);\r\n  }, []);\r\n\r\n  //states\r\n  const { nam } = useParams();\r\n  const [voted, setVoted] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commented, setCommented] = useState(false);\r\n  let contName;\r\n  let sid;\r\n  let indexx = 0;\r\n  //votePage관련 변수\r\n  let voteID = [];\r\n  let voteTitle = [];\r\n  let voteRegDate = [];\r\n  let voteHits = [];\r\n  //contents 관련 변수\r\n  let selecID = [];\r\n  let selecContent = [];\r\n  let selecHits = [];\r\n  //댓글 변수\r\n  let commentContent = [];\r\n  let commentNickName = [];\r\n  let commentID = [];\r\n  let commentUserID = [];\r\n  //console test\r\n  console.log(items);\r\n  /////// Data loading /////////////////////////////////////\r\n  //items을 변수에 담는 과정\r\n  //items를 바로 사용할 수 없는 현상때문에 옮겨 담음\r\n  const voteItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    items.map((item) => (\r\n      <div key={item.voteID} style={{ visibility: \"hidden\" }}>\r\n        {\r\n          (selecContent.push(item.selecContent),\r\n          selecID.push(item.selecID),\r\n          selecHits.push(item.selecHits),\r\n          voteID.push(item.voteID),\r\n          voteTitle.push(item.voteTitle),\r\n          voteRegDate.push(item.voteRegDate),\r\n          voteHits.push(item.voteHits),\r\n          commentContent.push(item.commentContent),\r\n          commentNickName.push(item.nickName),\r\n          commentID.push(item.commentID),\r\n          commentUserID.push(item.userID))\r\n        }\r\n      </div>\r\n    ))\r\n  );\r\n  /////// 데이터 처리 ///////////////////////////////\r\n  //contents관련\r\n  const selcContent = selecContent.filter(\r\n    (selecContent) => selecContent !== undefined\r\n  );\r\n  selcContent.shift();\r\n  const selcHits = selecHits.filter((selecHits) => selecHits !== undefined);\r\n  selcHits.shift();\r\n  const selcId = selecID.filter((selecID) => selecID !== undefined);\r\n  selcId.shift();\r\n  //comment관련\r\n  for (var i = 0; i < selcHits.length + 1; i++) {\r\n    commentContent.shift();\r\n    commentNickName.shift();\r\n    commentID.shift();\r\n    commentUserID.shift();\r\n  }\r\n\r\n  /////// 이미지 임시 저장 ////////////////////////////\r\n  //이미지 저장과 호출이 가능하게 변경해야 함\r\n  let images = new Image();\r\n\r\n  if (nam == 1) {\r\n    images = image1;\r\n  } else if (nam == 2) {\r\n    images = image2;\r\n  } else if (nam == 3) {\r\n    images = image3;\r\n  } else if (nam == 4) {\r\n    images = image4;\r\n  } else if (nam == 5) {\r\n    images = image5;\r\n  } else if (nam == 6) {\r\n    images = image6;\r\n  } else if (nam == 7) {\r\n    images = image7;\r\n  } else {\r\n    images = testImage;\r\n  }\r\n\r\n  ///// 이벤트 //////////////////////////////////////\r\n  //contents 선택\r\n  const handleCheck = ({ target }) => {\r\n    indexx = target.name;\r\n    sid = selcId[indexx];\r\n  };\r\n  //투표 버튼 클릭\r\n  const handleSet = (e) => {\r\n    getVoted(nam, sid, userId);\r\n    setVoted(true);\r\n  };\r\n  //comment 어떤거 선택했는지\r\n  const onChange = ({ target }) => {\r\n    target.name = target.value;\r\n    contName = target.value;\r\n  };\r\n  //comment 입력\r\n  const handleChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n  //comment 버튼 클릭\r\n  const handleRegister = (e) => {\r\n    getCommentRequest(comment, nam, userId);\r\n  };\r\n  // 댓글 삭제\r\n  const handleDeleteComment = (data) => {\r\n    deleteComment(nam, data);\r\n  };\r\n\r\n  /////// 화면 구성 /////////////////////////////////////////////////////////////////////////\r\n  ///// votepage 상단 /////\r\n  function VoteTop() {\r\n    return (\r\n      <div className=\"VotePage\">\r\n        <h1 className=\"title\">{voteTitle}</h1>\r\n        <h5 className=\"title\">\r\n          {voteRegDate[0]} | {voteHits}명\r\n        </h5>\r\n        <RBS.Col xs={6} md={4}>\r\n          {/* ../public/content_img.png 이라고 해도 되지만 위치몰라도 고를 수 있는걸 보여주고 싶었음*/}\r\n          <RBS.Image src={images} rounded />\r\n        </RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ///// Contents /////\r\n  //투표 안한사람 화면\r\n  function contentList() {\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\"></FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"select\"\r\n          name=\"select\"\r\n          onChange={(e) => onChange(e)}\r\n        >\r\n          {selcContent.map((item, index) => (\r\n            <FormControlLabel\r\n              name={index}\r\n              value={item}\r\n              control={<Radio />}\r\n              onClick={(e) => handleCheck(e)}\r\n              label={item}\r\n            ></FormControlLabel>\r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  function notVote() {\r\n    return (\r\n      <div>\r\n        <RBS.Col>{contentList()}</RBS.Col>\r\n        <RBS.Col>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={useStyles.submit}\r\n            onClick={handleSet}\r\n          >\r\n            투표!\r\n          </Button>\r\n        </RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //투표 한사람 화면\r\n\r\n  function yesContentList() {\r\n    let P = [];\r\n    let sum = 0;\r\n    for (let i = 0; i < selcHits.length; i++) {\r\n      sum += selcHits[i];\r\n    }\r\n    for (let i = 0; i < selcHits.length; i++) {\r\n      P.push((selcHits[i] / sum) * 100);\r\n      P[i] = P[i].toFixed(1);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {selcHits.map((item, index) => (\r\n          <div key={index} style={{ display: \"block\" }}>\r\n            <>\r\n              {selcContent[index] +\r\n                \" (\" +\r\n                selcHits[index] +\r\n                \"명) \" +\r\n                P[index] +\r\n                \"%\"}\r\n            </>\r\n            <BorderLinearProgress variant=\"determinate\" value={P[index]} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function yesVote() {\r\n    return (\r\n      <div>\r\n        <RBS.Col>{yesContentList()}</RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //투표 화면 최종본\r\n  function Votefinal() {\r\n    if (first == 1 || voted) {\r\n      return <div>{yesVote()}</div>;\r\n    } else {\r\n      return <div>{notVote()}</div>;\r\n    }\r\n  }\r\n  ///// Comment /////\r\n  function InputComment() {\r\n    return (\r\n      <div>\r\n        <form className={useStyles.root}>\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            label=\"comment\"\r\n            placeholder=\"댓글을 입력하세요.\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={comment}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={useStyles.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            등록하기\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  function getComment() {\r\n    return (\r\n      <Grid container spacing={1}>\r\n        {commentID.map((item, index) => (\r\n          <div key={index}>\r\n            {item}\r\n            <CommentCard\r\n              commentNickName={commentNickName[index]}\r\n              commentContent={commentContent[index]}\r\n              commentID={commentID[index]}\r\n              userId={userId}\r\n              commentUserID={commentUserID[index]}\r\n              deleteComment={handleDeleteComment}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  return (\r\n    <div className=\"VotePage\">\r\n      <RBS.Container>\r\n        <RBS.Row>\r\n          <RBS.Col>\r\n            <VoteTop></VoteTop>\r\n            <Votefinal></Votefinal>\r\n            <InputComment></InputComment>\r\n            <div>{commented ? getComment() : getComment()}</div>\r\n            {/* 삼항연산없이 getComment써도 그냥 뜰거 같은데 확인해보자 */}\r\n          </RBS.Col>\r\n          <RBS.Col>\r\n            <></>\r\n          </RBS.Col>\r\n        </RBS.Row>\r\n      </RBS.Container>\r\n      <div class=\"votes\">{voteItems}</div>{\" \"}\r\n      {/* 이부분이 없을때 어떻게 되는지 확인필요 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    items: state.votes.get.items,\r\n    first: state.votes.get.first,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getVotes: (nam) => {\r\n      return dispatch(getVotes(nam));\r\n    },\r\n    getVoted: (nam, sid, userId) => {\r\n      return dispatch(getVoted(nam, sid, userId));\r\n    },\r\n    getCommentRequest: (comment, nam, userId) => {\r\n      return dispatch(getCommentRequest(comment, nam, userId));\r\n    },\r\n    getFirst: (nam, userId) => {\r\n      return dispatch(getFirst(nam, userId));\r\n    },\r\n    deleteComment: (nam, data) => {\r\n      return dispatch(deleteComment(nam, data));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePage);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Introduce.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Login.js",["179"],"import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Authentication from \"./Authentication\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"../../redux/authentication/actions\";\r\n\r\nclass Login extends Component {\r\n  handleLogin = (id, pw) => {\r\n    return this.props.loginRequest(id, pw).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.status === \"SUCCESS\") {\r\n        // create session data\r\n        let loginData = {\r\n          isLoggedIn: true,\r\n          userId: id,\r\n        };\r\n        document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n        console.log(\"login-cookie : \");\r\n        console.log(document.cookie);\r\n\r\n        // 로그인 성공시 루트 화면으로 돌아감.\r\n        this.props.history.push(\"/\");\r\n        return true;\r\n      } else {\r\n        console.log(\"login-cookie-fail\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Authentication onLogin={this.handleLogin} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    status: state.authentication.login.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginRequest: (id, pw) => {\r\n      console.log(\"mapDispatchToProps\");\r\n      return dispatch(loginRequest(id, pw));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\ranking\\Ranking.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport \"./ranking.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport icon1 from \"../../img/icon/1.png\";\r\nimport icon2 from \"../../img/icon/2.png\";\r\nimport icon3 from \"../../img/icon/3.png\";\r\nimport icon4 from \"../../img/icon/4.png\";\r\nimport icon5 from \"../../img/icon/5.png\";\r\nimport icon6 from \"../../img/icon/6.png\";\r\nimport icon7 from \"../../img/icon/7.png\";\r\nimport icon8 from \"../../img/icon/8.png\";\r\nimport icon9 from \"../../img/icon/9.png\";\r\nimport icon10 from \"../../img/icon/10.PNG\";\r\n\r\nconst columns = [\r\n  { id: \"rank\", label: \"Rank\", minWidth: 100 },\r\n  { id: \"title\", label: \"Title\", minWidth: 170 },\r\n\r\n  {\r\n    id: \"user\",\r\n    label: \"user\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"hit\",\r\n    label: \"hit\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n];\r\n\r\nfunction createData(rank, title, user, hit) {\r\n  return { rank, title, user, hit };\r\n}\r\n\r\nconst rows = [\r\n  createData(1, \"투표1\", \"김시우\", 123),\r\n  createData(2, \"투표2\", \"조소망\", 121),\r\n  createData(3, \"투표3\", \"박철순\", 120),\r\n  createData(4, \"투표 4\", \"김정원\", 114),\r\n  createData(5, \"투표 5\", \"이상민\", 110),\r\n  createData(6, \"투표 6\", \"이우진\", 106),\r\n  createData(7, \"투표 7\", \"계대환\", 104),\r\n  createData(8, \"투표 8\", \"윤준서\", 100),\r\n  createData(9, \"\"),\r\n  createData(10, \"\"),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n    height: \"50%\",\r\n    display: \"flex\",\r\n    padding: \"20px, 20px, 20px, 20px\",\r\n    margin: \"5px\",\r\n  },\r\n  container: {\r\n    maxHeight: 700,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    margin: \"0px 20px 0px 20px\",\r\n    width: 80,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 1\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">whthakd</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 244\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon3}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 2\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">Siwoo</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 232\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon10}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 3\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">yanolza</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 226\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon1}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 4\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">firebird</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 208\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon4}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 5\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">kingWoo</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 199\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon7}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\Header.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\SignUp.js",["201"],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\mainHome\\MainHome.js",["202","203","204","205","206","207","208","209"],"import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getMainRequest,\r\n  pushLikeBtRequest,\r\n  pushDislikeBtRequest,\r\n  getLikeRequest,\r\n} from \"../../redux\";\r\nimport Subbar from \"../Subbar\";\r\nimport MediaCard from \"../MediaCard\";\r\n\r\n// material import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction MainHome({\r\n  getMainRequest,\r\n  getLikeRequest,\r\n  pushLikeBtRequest,\r\n  pushDislikeBtRequest,\r\n  contentList,\r\n  checkGetMain,\r\n  userID,\r\n  loading,\r\n  likeBtState,\r\n  dislikeBtState,\r\n  getLike,\r\n  history,\r\n}) {\r\n  let voteHits = [];\r\n  let voteID = [];\r\n  let voteRegDate = [];\r\n  let voteTitle = [];\r\n  let isLikeContent = []; // 0이면 notLike, 1이면 Like\r\n  let makerID = [];\r\n  let count = 0;\r\n  let like = [];\r\n\r\n  useEffect(() => {\r\n    getLikeRequest(category);\r\n    getMainRequest(category);\r\n  }, []);\r\n\r\n  const { category } = useParams();\r\n\r\n  //데이터 받기\r\n  const contentItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    contentList.map((content) => (\r\n      <div key={content.voteID} style={{ visibility: \"hidden\" }}>\r\n        {\r\n          (voteHits.push(content.voteHits),\r\n          voteID.push(content.voteID),\r\n          voteRegDate.push(content.voteRegDate),\r\n          voteTitle.push(content.voteTitle),\r\n          makerID.push(content.userID),\r\n          like.push(content.like))\r\n        }\r\n      </div>\r\n    ))\r\n  );\r\n\r\n  console.log(userID);\r\n  // 데이터 받기\r\n  const getLikeItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    getLike.map((content) => (\r\n      <div key={content.voteID} style={{ visibility: \"hidden\" }}>\r\n        {isLikeContent.push(content.tf)}\r\n      </div>\r\n    ))\r\n  );\r\n\r\n  // Like 버튼을 눌렀을 때\r\n  function handlePushLikeBt(body) {\r\n    pushLikeBtRequest(body).then(() => {\r\n      window.location.replace(\"/Home/\" + category);\r\n    });\r\n  }\r\n\r\n  // Like 취소 버튼 눌렀을 때\r\n  function handlePushDislikeBt(body) {\r\n    pushDislikeBtRequest(body).then(() => {\r\n      window.location.replace(\"/Home/\" + category);\r\n    });\r\n  }\r\n\r\n  //Contents에 관한 부분\r\n  return (\r\n    <div className={useStyles.root}>\r\n      <Subbar></Subbar>\r\n      <Grid container spacing={2}>\r\n        {contentList.map((content, index) => (\r\n          <Grid item xs={6} sm={3}>\r\n            <MediaCard\r\n              voteID={content.voteID}\r\n              voteHits={content.voteHits}\r\n              userID={userID}\r\n              voteRegDate={content.voteRegDate}\r\n              voteTitle={content.voteTitle}\r\n              count={count++}\r\n              isLikeContent={isLikeContent[index]}\r\n              makerID={content.userID}\r\n              like={content.like}\r\n              handlePushLikeBt={handlePushLikeBt}\r\n              handlePushDislikeBt={handlePushDislikeBt}\r\n            ></MediaCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userID: state.authentication.status.currentUser,\r\n    contentList: state.contents.status.voteContents,\r\n    checkGetMain: state.contents.status.valid,\r\n    getLike: state.contents.getLikeStatus.isLikeContents,\r\n    likeBtState: state.contents.addLike.status,\r\n    dislikeBtState: state.contents.disLike.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMainRequest: (category) => {\r\n      return dispatch(getMainRequest(category));\r\n    },\r\n    getLikeRequest: (category) => {\r\n      return dispatch(getLikeRequest(category));\r\n    },\r\n    pushLikeBtRequest: (body) => {\r\n      return dispatch(pushLikeBtRequest(body));\r\n    },\r\n    pushDislikeBtRequest: (body) => {\r\n      return dispatch(pushDislikeBtRequest(body));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHome);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\rootReducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\VoteContainer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Authentication.js",["210","211"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nclass Authentication extends Component {\r\n  state = {\r\n    userId: \"\",\r\n    userPass: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  handleLogin = () => {\r\n    let id = this.state.userId;\r\n    let pw = this.state.userPass;\r\n\r\n    // 정보가 부족하면 오류 메시지 출력\r\n    if (this.state.userId === \"\") {\r\n      this.toastCheckInfo_NotInfoID();\r\n      return false;\r\n    } else if (this.state.userPass === \"\") {\r\n      this.toastCheckInfo_NotInfoPassword();\r\n      return false;\r\n    }\r\n\r\n    this.props.onLogin(id, pw).then((success) => {\r\n      // 실패하면 비밀번호 재입력 받음\r\n      console.log(\"Auth_handleLogin\");\r\n      if (!success) {\r\n        console.log(this.props);\r\n        this.toastCheckInfo_Fail();\r\n        this.setState({\r\n          userPass: \"\",\r\n        });\r\n      } else {\r\n        this.toastCheckInfo_Complete();\r\n      }\r\n    });\r\n  };\r\n\r\n  toastCheckInfo_Complete = () => toast(this.state.userId + \"님 반갑습니다.\");\r\n  toastCheckInfo_NotInfoID = () => toast.error(\"아이디를 입력해주세요.\");\r\n  toastCheckInfo_NotInfoPassword = () =>\r\n    toast.error(\"비밀번호를 입력해주세요.\");\r\n  toastCheckInfo_Fail = () =>\r\n    toast.error(\"아이디 또는 패스워드가 잘못 입력되었습니다.\");\r\n\r\n  render() {\r\n    const button = {};\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={useStyles.paper}>\r\n          <Avatar className={useStyles.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            LOGIN\r\n          </Typography>\r\n          <form className={useStyles.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"userId\"\r\n              label=\"ID\"\r\n              name=\"userId\"\r\n              autoComplete=\"userId\"\r\n              autoFocus\r\n              value={this.state.userId}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"userPass\"\r\n              label=\"PASSWORD\"\r\n              type=\"Password\"\r\n              id=\"userPass\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.userPass}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={useStyles.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/SignUp\" variant=\"body2\">\r\n                  {\"계정이 없다면? 회원가입하러 가기\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            transition={Flip}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAuthentication.propTypes = {\r\n  onLogin: PropTypes.func,\r\n};\r\n\r\nAuthentication.defaultProps = {\r\n  onLogin: (id, pw) => {\r\n    console.error(\"login function not defined\");\r\n  },\r\n};\r\n\r\nexport default Authentication;\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\AuthSignUp.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\TopBar.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\CreateVote.js",["212"],"import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./createvote.css\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\n// import axios from 'axios';\r\n\r\n// import { CreateVotes } from '../redux/makevote/actions';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MyDropzone from \"./MyDropzone\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nclass CreateVote extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     selectedFile : null,\r\n  //   }\r\n  // }\r\n  state = {\r\n    selectedFile: null,\r\n    voteTitle: \"\",\r\n    voteContents: [\"\"],\r\n    category: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n  selectChange = (e) => {\r\n    this.setState({ category: e.target.value});\r\n  }\r\n  addAnswer = (e) => {\r\n    this.setState({ voteContents: [...this.state.voteContents, \"\"] });\r\n  };\r\n\r\n  removeAnswer = (index) => {\r\n    const newContents = this.state.voteContents.filter((content, i) => {\r\n      return i !== index;\r\n    });\r\n\r\n    this.setState({ voteContents: newContents });\r\n  };\r\n\r\n  handleAnswer = (e, index) => {\r\n    const voteContents = [...this.state.voteContents];\r\n    voteContents[index] = e.target.value;\r\n    this.setState({ voteContents });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n    let body = {\r\n      voteTitle: this.state.voteTitle,\r\n      selecContentList: this.state.voteContents,\r\n      category: this.state.category,\r\n    };\r\n\r\n    console.log(body);\r\n\r\n    this.props.onPost(body).then(() => {\r\n      // 보내지면 빈칸으로 변경\r\n      this.setState({\r\n        voteTitle: \"\",\r\n        voteContents: [\"\"],\r\n        category: \"\",\r\n      });\r\n    });\r\n    // this.props.CreateVotes(this.state);\r\n  };\r\n\r\n  handleFileInput(e){\r\n    this.setState({\r\n      selectedFile: e.target.files[0],\r\n    })\r\n  }\r\n\r\n  handlePostImg() {\r\n    const formData = new FormData();\r\n    formData.append('file', this.state.selectedFile);\r\n    console.log(formData[0]);\r\n    console.log(this.state.selectedFile);\r\n    const config = {\r\n      headers: {\r\n        'content-type' : 'multipart/form-data'\r\n      }\r\n    }\r\n    return axios\r\n    .post(\"http://localhost:8080/test\", formData, config)\r\n    .then(response => {\r\n      console.log(response.data);\r\n    }).catch(err => {\r\n      console.log('안나와 씌이벌~');\r\n    })\r\n  }\r\n  submitImg = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(FileReader);\r\n  };\r\n\r\n  render() {\r\n    const voteContents = this.state.voteContents.map((content, i) => (\r\n      <div key={i} className=\"vconContainer\">\r\n        <input\r\n          className=\"content\"\r\n          type=\"text\"\r\n          value={content}\r\n          key={i}\r\n          onChange={(e) => this.handleAnswer(e, i)}\r\n        />\r\n        <div className=\"button-container\">\r\n          <button\r\n            className=\"remove-button\"\r\n            onClick={(e) => this.removeAnswer(i)}\r\n          >\r\n            삭제\r\n          </button>\r\n          {/* <Button\r\n            className=\"remove-button\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={(e) => this.removeAnswer(i)}\r\n          >\r\n            삭제\r\n          </Button> */}\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <h3 className=\"header\">투표 만들기</h3>\r\n          <div className=\"title-holder\">\r\n            <label className=\"title-name\" htmlFor=\"voteTitle\">\r\n              투표 제목\r\n            </label>\r\n            <input\r\n              className=\"title\"\r\n              type=\"text\"\r\n              name=\"voteTitle\"\r\n              value={this.state.voteTitle}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"category\">\r\n            <FormControl\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n            >\r\n              <InputLabel id=\"grade\">Category</InputLabel>\r\n                <Select\r\n                  labelId=\"grade\"\r\n                  id=\"grade\"\r\n                  value={this.state.select}\r\n                  onChange={this.selectChange}\r\n                  label=\"Grade\"\r\n                >\r\n                  <MenuItem value=\"연예\">연예</MenuItem>\r\n                  <MenuItem value=\"시사\">시사</MenuItem>\r\n                  <MenuItem value=\"TV\">TV</MenuItem>\r\n                  <MenuItem value=\"학교\">학교</MenuItem>\r\n                  <MenuItem value=\"썰\">썰</MenuItem>\r\n                  <MenuItem value=\"기타\">기타</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n          </div>\r\n          <div className=\"conContainer\">\r\n            <label className=\"conName\">투표 항목</label>\r\n            {voteContents}\r\n          </div>\r\n          <div className=\"addcontainer\">\r\n            <button className=\"button\" onClick={this.addAnswer}>\r\n              항목 추가\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <input type=\"file\" name=\"file\" onChange={e => this.handleFileInput(e)}/>\r\n            <button type=\"button\" onClick={this.handlePostImg()}/>\r\n          </div>\r\n          <div className=\"subcontainer\">\r\n            <button className=\"button\" onClick={this.handleSubmit}>\r\n              투표 만들기\r\n            </button>\r\n            <MyDropzone/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateVote.propTypes = {\r\n  onPost: propTypes.func,\r\n};\r\n\r\nCreateVote.defaultProps = {\r\n  onPost: (body) => {\r\n    console.error(\"post function not defined\");\r\n  },\r\n};\r\n\r\nexport default CreateVote;\r\n// export default connect(() => ({}), { CreateVotes })(CreateVote);","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Subbar.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\index.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\MyDropzone.js",["213","214","215","216"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function MyDropzone(props) {\r\n  const [Images, setImages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\r\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\r\n\r\n    // 폼데이터 구성\r\n    const formData = new FormData();\r\n\r\n    const config = {\r\n      header: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n    console.log(acceptedFiles[0]);\r\n\r\n    await axios\r\n      .post(\"http://localhost:8080/imgRegister\", formData, config)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setImages([...Images, response.data.filePath]);\r\n          console.log(Images);\r\n        } else {\r\n          alert(\"파일 저장 실패\");\r\n        }\r\n      });\r\n\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log(\"file reading was aborted\");\r\n      reader.onerror = () => console.log(\"file reading has failed\");\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const images = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <img src={file.preview} style={{ width: \"200px\" }} alt=\"preview\" />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const RootProps = {\r\n    ...getRootProps(),\r\n  };\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop files here</p>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"3em\", marginBottom: \"5px\" }}>\r\n            <i className=\"fas fa-file-upload\"></i>\r\n          </div>\r\n          <div>이미지 넣기</div>\r\n        </div>\r\n      )}\r\n      <div>{images}</div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\SubbarItems.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\actions.js",["217","218","219"],"import axios from \"axios\";\r\nimport {\r\n  GET_VOTES_FAILURE,\r\n  GET_VOTES_REQUEST,\r\n  GET_VOTES_SUCCESS,\r\n  GET_VOTED_FAILURE,\r\n  GET_VOTED_REQUEST,\r\n  GET_VOTED_SUCCESS,\r\n  GET_COMMENT,\r\n  GET_COMMENT_FAILURE,\r\n  GET_COMMENT_SUCCESS,\r\n  REGISTER_COMMENT,\r\n  REGISTER_COMMENT_SUCCESS,\r\n  REGISTER_COMMENT_FAILURE,\r\n  GET_FIRST_REQUEST,\r\n  GET_FIRST_FAILURE,\r\n  GET_FIRST_SUCCESS,\r\n  DELETE_COMMENT_REQUEST,\r\n  DELETE_COMMENT_SUCCESS,\r\n  DELETE_COMMENT_FAILURE,\r\n} from \"./types\";\r\n\r\n\r\n// 화면 구성요소 GET\r\nexport function getVotesSuccess(votes) {\r\n  return {\r\n    type: GET_VOTES_SUCCESS,\r\n    votes,\r\n  };\r\n}\r\nexport function getVotesFailure(error) {\r\n  return {\r\n    type: GET_VOTES_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function getVotesREQUEST() {\r\n  return {\r\n    type: GET_VOTES_REQUEST,\r\n  };\r\n}\r\n\r\nexport function getVotes(nam) {\r\n  return (dispatch) => {\r\n    dispatch(getVotesREQUEST());\r\n    return axios\r\n      .get(\"http://localhost:8080/content\", {\r\n        params: {\r\n          voteID: nam,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(getVotesSuccess(response.data));\r\n      })\r\n      .catch((error) => dispatch(getVotesFailure(error)));\r\n  };\r\n  //   return axios\r\n  //     .get(\"http://localhost:8080/content/3\")\r\n  //     .then((response) => {\r\n  //       dispatch(getVotesSuccess())\r\n  //     })\r\n  //     .catch((error) => dispatch(getVotesFailure(error)));\r\n  // };\r\n}\r\n// 투표된 목록 불러오기\r\nexport function getVotedSuccess(votes) {\r\n  return {\r\n    type: GET_VOTED_SUCCESS,\r\n    votes,\r\n  };\r\n}\r\nexport function getVotedFailure(error) {\r\n  return {\r\n    type: GET_VOTED_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function getVotedREQUEST() {\r\n  return {\r\n    type: GET_VOTED_REQUEST,\r\n  };\r\n}\r\nexport function getVoted(nam, sid, userId) {\r\n  return (dispatch) => {\r\n    dispatch(getVotedREQUEST());\r\n    return axios\r\n      .get(\"http://localhost:8080/voteCount\", {\r\n        params: {\r\n          voteID: nam,\r\n          selecID: sid,\r\n          userID: userId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(getVotedSuccess(response.data));\r\n      })\r\n      .catch((error) => dispatch(getVotedFailure(error)));\r\n  };\r\n}\r\n// 댓글 등록 기능\r\n// export function registerCommentRequest(body) {\r\n//   return (dispatch) => {\r\n//     dispatch(registerComment());\r\n\r\n//     return axios\r\n//       .post(\"http://localhost:8080/registerComment\", body)\r\n//       .then((response) => {\r\n//         dispatch(registerCommentSuccess());\r\n//       })\r\n//       .catch((error) => {\r\n//         dispatch(registerCommentFailure());\r\n//       });\r\n//   };\r\n// }\r\n\r\n// export function registerComment() {\r\n//   return {\r\n//     type: REGISTER_COMMENT,\r\n//   };\r\n// }\r\n\r\n// export function registerCommentSuccess() {\r\n//   return {\r\n//     type: REGISTER_COMMENT_SUCCESS,\r\n//   };\r\n// }\r\n\r\n// export function registerCommentFailure() {\r\n//   return {\r\n//     type: REGISTER_COMMENT_FAILURE,\r\n//   };\r\n// }\r\n// 댓글 입력 및 불러오기\r\nexport function getCommentRequest(comment, nam, userId) {\r\n  return (dispatch) => {\r\n    dispatch(getComment());\r\n    return axios\r\n      .get(\"http://localhost:8080/showComment\", {\r\n        params: {\r\n          commentContent: comment,\r\n          voteID: nam,\r\n          userID: userId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(getCommentSuccess(response.data));\r\n      })\r\n      .catch((error) => dispatch(getCommentFailure(error)));\r\n  };\r\n}\r\nexport function getComment() {\r\n  return {\r\n    type: GET_COMMENT,\r\n  };\r\n}\r\n\r\nexport function getCommentSuccess(votes) {\r\n  return {\r\n\r\n    type: GET_COMMENT_SUCCESS,\r\n    votes,\r\n  };\r\n}\r\n\r\nexport function getCommentFailure() {\r\n  return {\r\n    type: GET_COMMENT_FAILURE,\r\n  };\r\n}\r\n//투표했는지 확인\r\nexport function getFirstSuccess(voted) {\r\n  return {\r\n    type: GET_FIRST_SUCCESS,\r\n    voted,\r\n  };\r\n}\r\nexport function getFirstFailure(error) {\r\n  return {\r\n    type: GET_FIRST_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function getFirstRequest() {\r\n  return {\r\n    type: GET_FIRST_REQUEST,\r\n  };\r\n}\r\nexport function getFirst(nam, userId) {\r\n  return (dispatch) => {\r\n    dispatch(getFirstRequest());\r\n    return axios\r\n      .get(\"http://localhost:8080/contentVoted\", {\r\n        params: {\r\n          voteID: nam,\r\n          userID: userId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(getFirstSuccess(response.data));\r\n      })\r\n      .catch((error) => dispatch(getFirstFailure(error)));\r\n  };\r\n}\r\n// 댓글 삭제 기능\r\nexport function deleteCommentRequest() {\r\n  return {\r\n    type: DELETE_COMMENT_REQUEST,\r\n  };\r\n}\r\nexport function deleteCommentSuccess(commentID) {\r\n  return {\r\n    type: DELETE_COMMENT_SUCCESS,\r\n    commentID\r\n  };\r\n}\r\nexport function deleteCommentFailure(error) {\r\n  return {\r\n    type: DELETE_COMMENT_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function deleteComment(nam, commentID) {\r\n\r\n  return (dispatch) => {\r\n    dispatch(deleteCommentRequest());\r\n    return axios\r\n      .get(\"http://localhost:8080/deleteComment\", {\r\n        params: {\r\n          voteID: nam,\r\n          commentID: commentID,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(deleteCommentSuccess(response.data));\r\n      })\r\n      .catch((error) => dispatch(getCommentFailure(error)));\r\n  };\r\n}","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\MediaCard.js",["220","221"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport testImage from \"../img/content_img.png\";\r\n\r\nimport image1 from \"../img/content/1cafe.PNG\";\r\nimport image2 from \"../img/content/2food.PNG\";\r\nimport image3 from \"../img/content/3notebook.PNG\";\r\nimport image4 from \"../img/content/4phone.PNG\";\r\nimport image5 from \"../img/content/5popsong.PNG\";\r\nimport image6 from \"../img/content/6stage.PNG\";\r\nimport image7 from \"../img/content/7dog.png\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconsole.log(image1.type);\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nfunction MediaCard({\r\n  voteID,\r\n  voteHits,\r\n  makerID,\r\n  userID,\r\n  voteRegDate,\r\n  voteTitle,\r\n  count,\r\n  like,\r\n  isLikeContent,\r\n  handlePushLikeBt,\r\n  handlePushDislikeBt,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  console.log(voteID);\r\n  console.log(userID);\r\n  console.log(isLikeContent);\r\n  let images = new Image();\r\n\r\n  if (count === 0) {\r\n    images = image1;\r\n  } else if (count === 1) {\r\n    images = image2;\r\n  } else if (count === 2) {\r\n    images = image3;\r\n  } else if (count === 3) {\r\n    images = image4;\r\n  } else if (count === 4) {\r\n    images = image5;\r\n  } else if (count === 5) {\r\n    images = image6;\r\n  } else if (count === 6) {\r\n    images = image7;\r\n  } else {\r\n    images = testImage;\r\n  }\r\n\r\n  const handleLikeBt = (e) => {\r\n    let body = {\r\n      voteID: voteID,\r\n    };\r\n\r\n    handlePushLikeBt(body);\r\n  };\r\n\r\n  const handleDislikeBt = (e) => {\r\n    let body = {\r\n      voteID: voteID,\r\n    };\r\n\r\n    handlePushDislikeBt(body);\r\n  };\r\n\r\n  let checkCurrentUser = 0;\r\n\r\n  // 0이면 로그인X\r\n  // 1이면 로그인O\r\n  if (userID === \"NONE\") {\r\n    checkCurrentUser = 0;\r\n  } else {\r\n    checkCurrentUser = 1;\r\n  }\r\n\r\n  // 좋아요 안눌려 있다면 빈 하트\r\n  const isNotLikeContentBt = (\r\n    <div>\r\n      <IconButton aria-label=\"add to favorites\" onClick={handleLikeBt}>\r\n        <FavoriteBorderIcon />\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          {like}\r\n        </Typography>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n\r\n  // 좋아요 눌려 있으면 채운 하트\r\n  const isLikeContentBt = (\r\n    <div>\r\n      <IconButton aria-label=\"cancel to favorites\" onClick={handleDislikeBt}>\r\n        <FavoriteIcon />\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          {like}\r\n        </Typography>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n\r\n  // 로그인 안되어 있을 때 빈 하트\r\n  const likeBT = (\r\n    <div>\r\n      <IconButton aria-label=\"need to login\">\r\n        <FavoriteBorderIcon />\r\n        <a href=\"/SignIn\"></a>\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          {like}\r\n        </Typography>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Link to={`/content/${voteID}`}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={images}\r\n            title={voteTitle}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {voteTitle}\r\n            </Typography>\r\n            <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n              작성자 : {makerID}\r\n            </Typography>\r\n            <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n              등록일 : {voteRegDate}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Link>\r\n      <CardActions>\r\n        <div>\r\n          {checkCurrentUser ? (\r\n            <div> {isLikeContent ? isLikeContentBt : isNotLikeContentBt}</div>\r\n          ) : (\r\n            <div>{likeBT}</div>\r\n          )}\r\n        </div>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  handlePushLikeBt: PropTypes.func,\r\n  handlePushDislikeBt: PropTypes.func,\r\n};\r\n\r\nMediaCard.defaultProps = {\r\n  handlePushLikeBt: () => {\r\n    console.error(\"handlePushLikeBt function not defined\");\r\n  },\r\n  handlePushDislikeBt: () => {\r\n    console.error(\"handlePushDislikeBt function not defined\");\r\n  },\r\n};\r\n\r\nexport default MediaCard;\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\CommentCard.js",["222","223"],"import React from \"react\";\r\nimport { makeStyles, StylesProvider } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    textAlign: \"left\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  name: {\r\n    fontSize: 18,\r\n  },\r\n  comment: {\r\n    fontSize: 12,\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function CommentCard(comment) {\r\n  const classes = useStyles();\r\n  let canDelete = false;\r\n  if (comment.commentUserID == comment.userId) canDelete = true;\r\n  const sendCommentId = () => {\r\n    comment.deleteComment(comment.commentID);\r\n  };\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.name}>\r\n          {comment.commentNickName}\r\n        </Typography>\r\n        <Typography className={classes.comment}>\r\n          {comment.commentContent}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {canDelete ? (\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={sendCommentId}\r\n            index={comment.commentID}\r\n          >\r\n            x\r\n          </Button>\r\n        ) : null}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":3,"column":21,"nodeType":"230","messageId":"231","endLine":3,"endColumn":31},{"ruleId":"232","severity":1,"message":"233","line":96,"column":6,"nodeType":"234","endLine":96,"endColumn":8,"suggestions":"235"},{"ruleId":"228","severity":1,"message":"236","line":102,"column":21,"nodeType":"230","messageId":"231","endLine":102,"endColumn":33},{"ruleId":"228","severity":1,"message":"237","line":103,"column":7,"nodeType":"230","messageId":"231","endLine":103,"endColumn":15},{"ruleId":"238","severity":1,"message":"239","line":168,"column":11,"nodeType":"240","messageId":"241","endLine":168,"endColumn":13},{"ruleId":"238","severity":1,"message":"239","line":170,"column":18,"nodeType":"240","messageId":"241","endLine":170,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":172,"column":18,"nodeType":"240","messageId":"241","endLine":172,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":174,"column":18,"nodeType":"240","messageId":"241","endLine":174,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":176,"column":18,"nodeType":"240","messageId":"241","endLine":176,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":178,"column":18,"nodeType":"240","messageId":"241","endLine":178,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":180,"column":18,"nodeType":"240","messageId":"241","endLine":180,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":317,"column":15,"nodeType":"240","messageId":"241","endLine":317,"endColumn":17},{"ruleId":"228","severity":1,"message":"242","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":21},{"ruleId":"228","severity":1,"message":"243","line":2,"column":22,"nodeType":"230","messageId":"231","endLine":2,"endColumn":30},{"ruleId":"228","severity":1,"message":"244","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":13},{"ruleId":"228","severity":1,"message":"245","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":13},{"ruleId":"228","severity":1,"message":"246","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"247","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":17},{"ruleId":"228","severity":1,"message":"248","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":22},{"ruleId":"228","severity":1,"message":"249","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":17},{"ruleId":"228","severity":1,"message":"250","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":23},{"ruleId":"228","severity":1,"message":"251","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":16},{"ruleId":"228","severity":1,"message":"252","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":18},{"ruleId":"228","severity":1,"message":"253","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":13},{"ruleId":"228","severity":1,"message":"254","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":13},{"ruleId":"228","severity":1,"message":"255","line":23,"column":8,"nodeType":"230","messageId":"231","endLine":23,"endColumn":13},{"ruleId":"228","severity":1,"message":"256","line":25,"column":8,"nodeType":"230","messageId":"231","endLine":25,"endColumn":13},{"ruleId":"228","severity":1,"message":"257","line":26,"column":8,"nodeType":"230","messageId":"231","endLine":26,"endColumn":13},{"ruleId":"228","severity":1,"message":"258","line":29,"column":7,"nodeType":"230","messageId":"231","endLine":29,"endColumn":14},{"ruleId":"228","severity":1,"message":"259","line":53,"column":7,"nodeType":"230","messageId":"231","endLine":53,"endColumn":11},{"ruleId":"228","severity":1,"message":"260","line":98,"column":10,"nodeType":"230","messageId":"231","endLine":98,"endColumn":14},{"ruleId":"228","severity":1,"message":"261","line":99,"column":10,"nodeType":"230","messageId":"231","endLine":99,"endColumn":21},{"ruleId":"228","severity":1,"message":"262","line":101,"column":9,"nodeType":"230","messageId":"231","endLine":101,"endColumn":25},{"ruleId":"228","severity":1,"message":"263","line":105,"column":9,"nodeType":"230","messageId":"231","endLine":105,"endColumn":32},{"ruleId":"228","severity":1,"message":"242","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":21},{"ruleId":"228","severity":1,"message":"264","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"265","line":2,"column":13,"nodeType":"230","messageId":"231","endLine":2,"endColumn":16},{"ruleId":"228","severity":1,"message":"266","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":17},{"ruleId":"228","severity":1,"message":"267","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":14},{"ruleId":"228","severity":1,"message":"268","line":19,"column":10,"nodeType":"230","messageId":"231","endLine":19,"endColumn":14},{"ruleId":"232","severity":1,"message":"269","line":56,"column":6,"nodeType":"234","endLine":56,"endColumn":8,"suggestions":"270"},{"ruleId":"228","severity":1,"message":"271","line":61,"column":9,"nodeType":"230","messageId":"231","endLine":61,"endColumn":21},{"ruleId":"228","severity":1,"message":"272","line":80,"column":9,"nodeType":"230","messageId":"231","endLine":80,"endColumn":21},{"ruleId":"228","severity":1,"message":"273","line":18,"column":10,"nodeType":"230","messageId":"231","endLine":18,"endColumn":19},{"ruleId":"228","severity":1,"message":"274","line":99,"column":11,"nodeType":"230","messageId":"231","endLine":99,"endColumn":17},{"ruleId":"228","severity":1,"message":"275","line":17,"column":7,"nodeType":"230","messageId":"231","endLine":17,"endColumn":16},{"ruleId":"228","severity":1,"message":"276","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"277","line":10,"column":9,"nodeType":"230","messageId":"231","endLine":10,"endColumn":15},{"ruleId":"232","severity":1,"message":"278","line":48,"column":6,"nodeType":"234","endLine":48,"endColumn":8,"suggestions":"279"},{"ruleId":"228","severity":1,"message":"280","line":71,"column":9,"nodeType":"230","messageId":"231","endLine":71,"endColumn":18},{"ruleId":"228","severity":1,"message":"281","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":12,"endColumn":19},{"ruleId":"228","severity":1,"message":"282","line":13,"column":3,"nodeType":"230","messageId":"231","endLine":13,"endColumn":27},{"ruleId":"228","severity":1,"message":"283","line":14,"column":3,"nodeType":"230","messageId":"231","endLine":14,"endColumn":27},{"ruleId":"228","severity":1,"message":"267","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":131,"column":9,"nodeType":"286","endLine":131,"endColumn":27},{"ruleId":"228","severity":1,"message":"287","line":2,"column":22,"nodeType":"230","messageId":"231","endLine":2,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":31,"column":29,"nodeType":"240","messageId":"241","endLine":31,"endColumn":31},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getFirst', 'getVotes', 'nam', and 'userId'. Either include them or remove the dependency array. If 'getFirst' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["290"],"'setCommented' is assigned a value but never used.","'contName' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'useTheme' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'IconButton' is defined but never used.","'icon2' is defined but never used.","'icon5' is defined but never used.","'icon6' is defined but never used.","'icon8' is defined but never used.","'icon9' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'useState' is defined but never used.","'RBS' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'category', 'getLikeRequest', and 'getMainRequest'. Either include them or remove the dependency array. If 'getLikeRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],"'contentItems' is assigned a value but never used.","'getLikeItems' is assigned a value but never used.","'Copyright' is defined but never used.","'button' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Dropzone' is defined but never used.","'onDrop' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'Images'. Either include it or remove the dependency array. You can also do a functional update 'setImages(I => ...)' if you only need 'Images' in the 'setImages' call.",["292"],"'RootProps' is assigned a value but never used.","'REGISTER_COMMENT' is defined but never used.","'REGISTER_COMMENT_SUCCESS' is defined but never used.","'REGISTER_COMMENT_FAILURE' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'StylesProvider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [getFirst, getVotes, nam, userId]",{"range":"299","text":"300"},"Update the dependencies array to be: [category, getLikeRequest, getMainRequest]",{"range":"301","text":"302"},"Update the dependencies array to be: [Images]",{"range":"303","text":"304"},[2649,2651],"[getFirst, getVotes, nam, userId]",[1303,1305],"[category, getLikeRequest, getMainRequest]",[1456,1458],"[Images]"]